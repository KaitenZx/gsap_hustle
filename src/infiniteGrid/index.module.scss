/* src/components/InfiniteGrid/InfiniteGrid.module.scss */

// Корневой элемент компонента
.mwg_effect026 {
	height: 100vh; // Занимает всю высоту экрана
	width: 100vw; // Занимает всю ширину экрана
	overflow: hidden;
	position: relative; // Для позиционирования заголовка, если нужно
	pointer-events: none; // Раскомментируем позже, когда добавим Observer на window
	background-color: #121212; // Фон из примера
	color: #F1F1F1; // Цвет текста из примера
	box-sizing: border-box;
}


.container {
	display: grid;
	// БЫЛО: grid-template-columns: repeat(2, max-content);
	// СТАЛО: Используем доли (fr units). Контейнер все еще max-content,
	// поэтому он расширится под два самых широких дочерних элемента,
	// а 1fr заставит обе колонки быть равными этой ширине.
	grid-template-columns: repeat(2, 1fr);
	width: max-content; // Оставляем, чтобы контейнер был достаточно широк
	will-change: transform;
	pointer-events: none;
}

// Блок контента (содержит сетку изображений)
.content {
	display: grid;
	width: max-content;
	grid-template-columns: repeat(5, 1fr);
	gap: 10vw;
	box-sizing: border-box; // Учитываем padding в размерах
	pointer-events: none;
	padding: 5vw;
}

// Отдельный медиа-элемент (обертка для img)
.media {
	// Ширина элемента (можно настроить)
	width: 25vw;
	// Соотношение сторон 1:1 (квадрат)
	aspect-ratio: 1 / 1;
	// Запрещаем выделение изображений
	user-select: none;
	// pointer-events: auto; // Если нужно взаимодействие с картинками (здесь не нужно)

	img {
		width: 100%;
		height: 100%;
		display: block; // Убирает лишние отступы под картинкой
		// Масштабирует изображение, сохраняя пропорции, чтобы оно поместилось в контейнер
		object-fit: contain;
	}
}