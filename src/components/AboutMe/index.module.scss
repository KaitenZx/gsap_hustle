.aboutMeContainer {
	position: relative;
	width: 100%;
	/* overflow-x: hidden; */
	z-index: 2;

	.themeToggleWrapper {
		position: absolute;
		top: 1rem;
		right: 1rem;
		z-index: 100;
	}

	.asciiCanvas {
		display: block;
		width: 100%;
		height: 100dvh;
		background-color: transparent;
		color: #fff;
		opacity: 1;
		overflow: hidden;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		pointer-events: auto;
		contain: strict;
	}

	.mwgEffect004 {
		position: relative;
		width: 100%;

		.pinHeight {
			height: 480vh;
			position: relative;
			pointer-events: none;

			.textAnimationContainer {
				height: 100dvh;
				width: 100%;
				padding-left: 4vw;
				padding-top: 24vh;
				display: flex;
				align-items: flex-start;
				justify-content: space-around;
				position: relative;
				z-index: 4;
				pointer-events: none;
				gap: 2rem;
				contain: layout paint;

				@media (max-width: 767px) {
					flex-direction: column;
					align-items: flex-start;
					padding-left: 16px;
					padding-right: 16px;
					padding-top: 15vh;
					height: auto;
					gap: 1rem;
				}

				@media (min-width: 768px) and (max-width: 1023px) {
					flex-direction: column;
					padding-left: 32px;
					padding-right: 32px;
					padding-top: 15vh;
					gap: 3rem;
					align-items: flex-start;
					height: auto;
				}

				.textColumn {
					flex-basis: 30%;
					display: flex;
					flex-direction: column;
					align-items: flex-start;
					gap: 1em;

					@media (max-width: 767px) {
						flex-basis: auto;
						width: 100%;
						padding: 0;

						&:last-child {
							margin-bottom: 0;
						}
					}

					@media (min-width: 768px) and (max-width: 1023px) {
						flex-basis: auto;
						width: 100%;
						padding: 0;
					}

					h2 {
						font-size: 20px;
						font-weight: 600;
						color: var(--text-color);
						pointer-events: none;
						width: 100%;
						text-align: left;

						@media (max-width: 767px) {
							font-size: 18px;
							margin: 0 0;
						}

						@media (min-width: 768px) and (max-width: 1023px) {
							margin: 0 0;
						}


					}


					&.aboutColumn {
						flex-basis: 55%;

						@media (min-width: 768px) and (max-width: 1023px) {
							width: 100%;
							flex-basis: auto;
							display: flex;
							flex-direction: column;
							gap: 1.5em;
						}

						.aboutParagraphsRow {
							@media (min-width: 768px) and (max-width: 1023px) {
								display: flex;
								flex-direction: row;
								flex-wrap: wrap;
								gap: 2em;
							}
						}

						.paragraph {
							width: 100%;
							font-family: 'Alpha Lyrae', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
							font-weight: 600;
							font-size: 20px;
							line-height: 24px;
							letter-spacing: -0.02em;
							color: var(--text-color);
							text-align: left;
							pointer-events: none;
							margin-bottom: 1em;

							&:last-child {
								margin-bottom: 0;
							}

							@media (max-width: 767px) {
								font-size: 14px;
								line-height: 1.4;
								margin-bottom: 0em;
							}

						}

						[data-theme='light'] & .paragraph {
							font-weight: 700;
							letter-spacing: 0.01em;
							-webkit-font-smoothing: antialiased;
							font-smooth: auto;
						}
					}

					&.linksColumn {
						flex-basis: 30%;

						a {
							padding: 0.5em 1em 0.5em 0;
						}
					}

					&.exposColumn {
						padding-left: 4em;
						flex-basis: 45%;


						@media (max-width: 767px) {
							padding-left: 0;
						}

						@media (min-width: 768px) and (max-width: 1023px) {
							padding-left: 0;
						}
					}

					&.exposColumn,
					&.linksColumn {
						ul {
							list-style: none;
							padding: 0;
							margin: 0;
							width: 100%;
						}

						li {
							font-size: 16px;
							line-height: 1.3;
							color: var(--text-color);
							pointer-events: none;
							padding: 0.5em 0;

							&:first-child {
								padding-top: 0;
							}

							@media (max-width: 767px) {
								font-size: 14px;
							}


						}
					}

					&.exposColumn {
						li {

							.yearTag {
								display: inline-block;
								background-color: var(--primary-color);
								color: var(--background-color);
								padding: 0.1em 0.4em;
								font-size: 0.8em;
								border-radius: 3px;
								margin-left: 0.5em;

								@media (max-width: 767px) {
									font-size: 0.7em;
									padding: 0.1em 0.3em;
								}
							}

							.subText {
								display: block;
								font-size: 0.8em;
								color: var(--text-color);
								margin-top: 0.2em;

								@media (max-width: 767px) {
									font-size: 0.75em;
								}
							}
						}
					}

					&.linksColumn {
						a {
							color: var(--text-color);
							text-decoration: none;
							pointer-events: auto;
							display: flex;
							align-items: center;

							&:hover {
								text-decoration: underline;
							}

							.linkIcon {
								width: 18px;
								height: 18px;
								margin-right: 8px;

								@media (max-width: 767px) {
									width: 16px;
									height: 16px;
									margin-right: 6px;
								}
							}
						}
					}
				}

				// Styles for the new wrapper for expos and links columns
				.exposLinksWrapper {
					display: flex;
					flex-direction: row;
					width: 100%;
					gap: 2em;

					@media (max-width: 767px) {
						align-items: flex-start;
						gap: 1rem;

						.textColumn {
							margin-bottom: 0;
							padding: 0;
						}

						.exposColumn {
							flex-basis: 62%;
						}

						.linksColumn {
							flex-basis: 30%;
						}
					}

					@media (min-width: 768px) and (max-width: 1023px) {
						flex-direction: row;
						align-items: flex-start;
						gap: 2em;
						width: 100%;

						.exposColumn {
							flex-basis: 55%;
							flex-grow: 1;
						}

						.linksColumn {
							flex-basis: 40%;
							flex-grow: 1;
						}
					}
				}
			}
		}
	}
}

// Global p tag style for this module
p {
	margin-block-start: 0;
}

// Marker class for JavaScript to identify texts to animate word-by-word
.animatableText {
	color: inherit;
}

.word {
	display: inline-block;
	transform: translate(calc(100vw - 25px), 0);
	color: inherit;
	opacity: 1;
}

.textContainerHiddenByOpacity {
	opacity: 0;
}