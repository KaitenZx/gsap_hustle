.overlay {
	position: fixed;
	inset: 0; // Аналог top: 0; right: 0; bottom: 0; left: 0;
	background-color: rgba(0, 0, 0, 0.7); // Полупрозрачный черный фон
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 1000; // Убедимся, что поверх остального контента
	padding: 20px; // Отступы на случай маленьких экранов
	box-sizing: border-box;


	@supports (backdrop-filter: blur(10px)) {
		background-color: rgba(0, 0, 0, 0.4); // Менее темный фон с блюром
		backdrop-filter: blur(8px) saturate(150%); // Размытие и небольшое насыщение
	}


}

.modalContent {
	position: relative; // Для позиционирования абсолютно спозиционированных img
	max-width: 50vw; // Не шире 50% ширины вьюпорта
	max-height: 80vh; // Не выше 80% высоты вьюпорта
	width: 100%; // Занять доступную ширину (до max-width)
	height: 100%; // Занять доступную высоту (до max-height)
	display: flex; // Сохраняем flex для выравнивания по умолчанию, хотя img будут абсолютными
	background-color: transparent; // Фон не нужен
	border-radius: 8px;
	overflow: hidden;
	// Важно задать ширину/высоту или aspect-ratio, чтобы position: absolute работало корректно
	// Но т.к. у нас max-width/max-height + object-fit: contain на img,
	// браузер сам должен рассчитать размеры. Оставим пока так.
}

// Общие стили для обоих изображений
.modalImageBase {
	position: absolute;
	inset: 0;
	display: block;
	width: 100%;
	height: 100%;
	object-fit: contain;
	transition: opacity 0.3s ease-in-out; // Плавный переход для opacity
}

// Стили для основного изображения
.modalImage {
	@extend .modalImageBase; // Наследуем базовые стили
	opacity: 0; // Изначально невидимо


	&.loaded {
		opacity: 1; // Показываем при загрузке
		// filter: blur(0); // Этот блюр больше не нужен здесь, если он был для плейсхолдера
	}
}

// Стили для плейсхолдера
.placeholderImage {
	@extend .modalImageBase; // Наследуем базовые стили
	opacity: 1; // Изначально видимо
	// filter: blur(5px); // Опционально: размытие для плейсхолдера, если он не data:uri


	&.mainLoaded {
		opacity: 0; // Скрываем, когда основное загружено
	}
}